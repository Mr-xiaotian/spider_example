import httpx, tqdm, json
from bs4 import BeautifulSoup

headers = {
    "cookie": "_C_ETH=1; _uetvid=e90e71b0cfb211eeaa91efb9f5082e69; _clck=ir33dz%7C2%7Cfpc%7C0%7C1524; _BINGNEWS=SW=1857&SH=959; BCP=AD=1&AL=1&SM=1; _EDGE_V=1; MUID=2143B516F4FB6BCA221AA13FF5466A61; MUIDB=2143B516F4FB6BCA221AA13FF5466A61; MSPTC=6CrQtkA9uJ4iMY0hB85WosC316_Frxck4XoIC-JPGEQ; EDGSRCHHPGUSR=CIBV=1.1816.0; _UR=QS=0&TQS=0&cdxcls=0&Pn=0; BFBUSR=CMUIDBCE=2&BAWAS=0&BAWFS=0&RW=0&BFBHP=0; _EDGE_CD=u=zh-hans; MSCCSC=1; SRCHD=AF=ANNAB1; SRCHUID=V=2&GUID=AF8274D754D643D5B280B487469AFB51&dmnchg=1; BFB=gxBtkDwVXSb6ZHa3pWTpCu0jIS2-veBHo7622FG-RbG23bPujEkBCsHo_2dHgx9SVT__ELR7GMnu5CUG50SxLz1y0aNCARFs_JpbwH5812GKH0dB91XRuB_7tGzCTxQEcvgqFiCvozEZSUMMCEb0XG-lfQPjnt4k-cnoZMPaFS8ld9tAUOntzxcHQHDWBEbb9mcOMFxgvfr-z-550IvpTXYKyiDr8emzZqxIu1REt_jKB8-3z9egSeQ33dicSuQ3L911IsWiNO1pcGztg-wDSXdK; OIDR=gxAaB3OmxXuznFi-LejSHC4ginslTtvgIfgCx96d5u8Lsr3BXN0oSAASjJQRlZ0OZOlH8UihuIE3DSQRK6Wwo4VLxaqtI8kpuxcGrhrAOez9JSWkX1jHJYPcYHqESLdmb8K0vo6ePFNJyA_SEKS2OYQsoPGlCZpuLKIEk51PaAtYsnss2YZ4b2RW5bPp5VmccP1zTAvGVHqLuz29G35dydLH5Awt8A7cjaAApaQhHCjWuO0DInkaM8N6Wcky9CMx6AC6llh-CVJBhKPs-TcClcd-igTxOyp8U3o1dA55kIogo1lGXhoUF5OIFD3eIE20HeNdHASCGw8XAp8Ehq7_5GMdATu1H3AGxhPePmnx3qGceoGJUYeOdgr7ihGN30YtbmiC8RFCNOsR_xBdj4IYooTQV7i2OY0ek-GHSIExi-MqPV3pIAvfjuNuX7UBD204F_g2D2SHq1gwcUnJVrHcj6aTS36_VKfRFj30dMS3NN13Mf5dzcYeABqlIMeKCkasT9mPm4J5GPVf3HC6uCEcD7VPnziVUKQl3_HNEoc_PRjmBY1YEM9Viu5zWFFunWGW1bR-JdzD4Cu1UJWgI8dnW7mQuKlEOfe96Zid70MQkTSeFWY6bMLQXJYYC30N5gSwYrTBQuMfrueSdcHByV5QRtKZ4qLrj-wACvH6rKguTsCI98nqDOcy6qo7HMMYb42OEKb4xjgKPdj09SGjrRlcrxasvE9JuERct0NrRCu5LkrEWBY96p1xw9P3h4tDUOsMOdLbiiiaI1h7cGQShxvna-Ov2RQ1WJszEd51E0eDPzYRdnTyRTp7dvTJ2hEv_aIBpNJ_T8HGEUZvlCC_RXQWSIwZ9XJgmwI00P-WXyjp1odLIT99dTDFwY9Ie07ojIKepmf6F38q_GglCMpQTM7_QNJfCXCXNIMCvTIC8iL_jE2wCIfFEs_Cd3tJqYS-jJWDFuDkuLCKLD-AX-af3xDNLTaNvHb3IpoNqaWT4lrq18v7R7ClmATFdcseuEqgsAW3PbI82I0pR0bBKXEnxc0bBhhQZkokcl6uMyfaOydWlJGGvb5vdloeIP_J7MZf0jw4p9WS7h8lyqb6s2TaLXd7IMr0NVbHQs7-LyxxnctGSQ7FlyCDjkF3uyIF9L1ZIAeE9dKFpBs1SMKQd_3RHQ4QfWK9uCHCekx1az7-mnnhSXQl7rhX-6dVnuTMRA9rqQY-ZXSRaE8EVxE7Wciu5hu0HYb46jFEmsIXonRi76FYtRPCoOmKcdDaK_Tdv0idCSVUxZeVkPMlqDIJPj8O9Yn3yXdIDk8uxAkhRgnxoLcwpqVoxBntYpFZJbfSAt0TM9uk2kmV_XcIZajcWcuIgonpQ6WV05DPQrybT-Gu2xrlsr5AsGxnDAzRuwyvNmCjtBepAzGmZV7LeKLlIioqDFZQ6hcL; OID=AxAyuU74Uy5Ep3K54mzeCgggm4NSCHE0-cMYhcH0JECRE03nkh53Nfz1oGbYBuCCmV78Ngm71wHBw1UInIByIxIETV5BwYjEAezJ0os0fI0f9ER4dZOAMSSHpRVixTLk5RMpyaTnzz9Ur8g42ZfLJr8B; OIDI=AxC_ZjOmH-U-qi92fQ9tBxm2pJ9wPWVBcst8fBzPpEtV3jRDZGf_tJAqzPOER59A8M6R5du1ToXW_wXqx0MPyAnf; BCBSWITCH=BCB=0; _TTSS_OUT=hist=WyJqYSIsImVuIiwiemgtSGFucyJd; _tarLang=default=zh-Hans; _TTSS_IN=hist=WyJ6aC1IYW5zIiwiZW4iLCJubCIsImF1dG8tZGV0ZWN0Il0=&isADRU=0; _Rwho=u=d&ts=2025-04-18; _EDGE_S=SID=2B35E0F3118F68272E41F53810E86903&mkt=zh-CN; ak_bmsc=CE26BA65E293B887644D7D397BCF4CB4~000000000000000000000000000000~YAAQGqwwF7hbej2WAQAA6ROVRxuah4h1CXakRkT9NWBA1M8a730KSQ1ymNqUGVCAmsbzSZyw45TwRB/MNaKJWLdbJooUsWTJj76uwLhFPdl+qpEJSDM75lj8CkM+W7DkLUsUpGFHI0H6gyehRbC66KduApi+Bu9ieSDXT/OqWWUZNt8luw9JlgbbMWVyu/4tR+UX71JXB5le7ayDzMrqyXCKGxMVbeJfvBAvz8LpFNPfl4VKijrbsrObhEbDr3avMTQyVHgtlicw1BYx5egUAT38HHVysQe9LnVghDCwxfpDEL3OxvozcxTjxxVwHgSjhIePzpi6WkCWoThoUjnzv/ZZBq0BF41tgN7xGS57muCpEdbYldUVrYlhzNjy6kpsvYMUpjZg/YnwPyqvKdsUzZcmfyni; _HPVN=CS=eyJQbiI6eyJDbiI6OCwiU3QiOjAsIlFzIjowLCJQcm9kIjoiUCJ9LCJTYyI6eyJDbiI6OCwiU3QiOjAsIlFzIjowLCJQcm9kIjoiSCJ9LCJReiI6eyJDbiI6OCwiU3QiOjAsIlFzIjowLCJQcm9kIjoiVCJ9LCJBcCI6dHJ1ZSwiTXV0ZSI6dHJ1ZSwiTGFkIjoiMjAyNS0wNC0xOFQwMDowMDowMFoiLCJJb3RkIjowLCJHd2IiOjAsIlRucyI6MCwiRGZ0IjpudWxsLCJNdnMiOjAsIkZsdCI6MCwiSW1wIjoyNywiVG9ibiI6MH0=; SNRHOP=I=&TS=; SRCHUSR=DOB=20240218&T=1740970126000&FBW=1&DS=1; BFPRResults=FirstPageUrls=4012A464519162628AD23068F2590651%2C1DBF2DC4662A3FB138B93E93E188F39C%2CF2A7E971A3E3D4EECAFCFE4326987125%2C95DABFCCDC472D779C169CF350658FF2%2CE613BFEE24DF2BD4F38BE452AC4D8DD9%2C8D908E8F19F44AFB8ADD88A37B5E4BFA%2C9AF5FE7837062BF4BBD66859C55AAFE7%2CDBE9A42819EA21842A1414C7BF9A206E%2CF9C160D56C42CAA696F0C2CEB7BA6023%2CEA70AA4C5502373B43EFE70989D7FF8D&FPIG=8309F267F2B64FD199C0695567A8E54D; GC=HJTTiKt8ADcV7f691-dOZ3PNQaNBLLm1WD2diYwsG755QqllYGJozXj2uGife2ZGBqtUmcZa4lnyyTlYu22NDQ; _RwBf=r=0&ilt=109&ihpd=0&ispd=1&rc=192&rb=0&gb=0&rg=200&pc=189&mtu=0&rbb=0&cid=&clo=0&v=1&l=2025-04-18T07:00:00.0000000Z&lft=0001-01-01T00:00:00.0000000&aof=0&ard=0001-01-01T00:00:00.0000000&rwdbt=0&rwflt=0&rwaul2=0&g=&o=2&p=&c=&t=0&s=0001-01-01T00:00:00.0000000+00:00&ts=2025-04-18T07:02:22.7559680+00:00&rwred=0&wls=&wlb=&wle=&ccp=&cpt=&lka=0&lkt=0&aad=0&TH=; _SS=PC=U531&SID=2B35E0F3118F68272E41F53810E86903&R=192&RB=0&GB=0&RG=200&RP=189; USRLOC=HS=1&ELOC=LAT=35.692440032958984|LON=139.69720458984375|N=Shinjuku-Ku%EF%BC%8C%E4%B8%9C%E4%BA%AC%E9%83%BD|ELT=9|&DLOC=LAT=35.6872|LON=139.742|A=84972|N=%e4%b8%9c%e4%ba%ac%e9%83%bd%e4%b8%80%e7%95%aa%e7%94%ba|C=|S=|TS=250418070223|ETS=250418071223|&BID=MjUwNDE4MTQ1MDU0X2E2ODdlM2UzZDk5YzIyNmFhNjA1Y2QwODg5NzZkODlkODY0NTJjZTYxMjM1ODgwMjAxOWFiYjExNmU3NzdhMWY=; SRCHHPGUSR=SRCHLANG=zh-Hans&BZA=0&DM=0&BRW=XW&BRH=S&CW=1872&CH=392&SCW=1857&SCH=1863&DPR=1.0&UTC=480&PV=15.0.0&EXLTT=31&PRVCW=1872&PRVCH=393&HV=1744959742&PR=1&WTS=63856347410&IG=123FBC8707004A8FA014B594D7F4AA2E&CIBV=1.1813.0&cdxupdttm=638584115671790908&WEBTHEME=0&THEME=0&NTWKTYP=4g&AV=14&ADV=14&RB=0&MB=0&HVE=CfDJ8GtUudZcSi1Enm88WwQKtCdb2fW34Becz5lGuI_WXyywZPcusm_9yhzgY6hFe25w3G3fk1IfQCpEvvHWqEieQrGNL56-9U35R2Tixq_CAydIzCrFiY7VDLrfC1PnSsnKzrQsY2L2kAeq1K4xtJjPqx1Nqw11GbWjafUqMJk10jy58JdaGW7FvDkCPexiCqjWOw",
    'user-agent': "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36 Edg/135.0.0.0",
    'referer': 'https://www.bing.com/search?q=site%3ahighschoolfootballamerica.com&rdr=1&rdrig=B6E2191474884462A353B7E14A4E3D84&FPIG=8309F267F2B64FD199C0695567A8E54D%2cCE0F1CB80E7C49E49914142492D886E9&first=1&FORM=PERE'
}

def get_page_urls(first_index):
    url = (
        f'https://www.bing.com/search?q=site%3ahighschoolfootballamerica.com'
        f'&first={first_index}'
        f'&cvid=C1E6228CF68641D284FD84649207A359'
        f'&FORM=PERE2'
    )

    response = httpx.get(url, headers=headers)
    soup = BeautifulSoup(response.text, 'html.parser')
    url_list = []

    for a_tag in soup.select('h2 a'):
        url_list.append({
            "href": a_tag['href'],
            "text": a_tag.get_text(strip=True)
        })

    if not url_list:
        print(f"No more pages at index {first_index}")

    return url_list

if __name__ == '__main__':
    total_list = []
    for i in tqdm(range(1, 1992, 10)):
        print(f"Getting page urls at index {i}")
        urls = get_page_urls(i)
        total_list.extend(urls)

    with open("urls.json", "w", encoding="utf-8") as f:
        json.dump(total_list, f, ensure_ascii=False, indent=2)